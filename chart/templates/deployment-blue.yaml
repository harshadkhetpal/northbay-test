apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-blue
  labels:
    {{- include "nginx-bluegreen.labels" . | nindent 4 }}
    app: nginx
    version: blue
spec:
  # True Blue-Green: Both versions always exist, replicas control which is active
  replicas: {{ if eq .Values.activeVersion "blue" }}{{ .Values.replicaCount }}{{ else }}0{{ end }}
  selector:
    matchLabels:
      {{- include "nginx-bluegreen.selectorLabels" . | nindent 6 }}
      app: nginx
      version: blue
  strategy:
    type: Recreate  # Better for Blue-Green: ensures all pods are ready before switching traffic
  template:
    metadata:
      labels:
        {{- include "nginx-bluegreen.selectorLabels" . | nindent 8 }}
        app: nginx
        version: blue
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000  # appuser
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: api
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false  # FastAPI needs writable filesystem for temp files
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
          {{- if and .Values.keyVault.enabled (or (and .Values.terraformConfig .Values.terraformConfig.workloadIdentityClientId) .Values.serviceAccount.workloadIdentityClientId) }}
          {{- range .Values.keyVault.secrets }}
            - name: {{ .secretName }}
              mountPath: "/mnt/secrets-store/{{ .secretName }}"
              readOnly: true
          {{- end }}
          {{- end }}
            # Temporary directory for FastAPI
            - name: tmp
              mountPath: /tmp
      volumes:
      {{- if and .Values.keyVault.enabled (or (and .Values.terraformConfig .Values.terraformConfig.workloadIdentityClientId) .Values.serviceAccount.workloadIdentityClientId) }}
      {{- range .Values.keyVault.secrets }}
        - name: {{ .secretName }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "nginx-bluegreen.fullname" $ }}-kv
      {{- end }}
      {{- end }}
        # Temporary volume for FastAPI
        - name: tmp
          emptyDir: {}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
