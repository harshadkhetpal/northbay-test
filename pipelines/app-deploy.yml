name: $(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main

variables:
- group: global-variables
- name: azureSubscription
  value: AzureSubscription
- name: acrName
  value: northbay
- name: imageName
  value: nginx-bluegreen
- name: imageTag
  value: $(Build.BuildId)
- name: helmChartPath
  value: chart/
- name: aksResourceGroup
  value: aks-private-rg
- name: aksClusterName
  value: aks-private-cluster

pool:
  vmImage: ubuntu-latest

stages:
- stage: Setup_ArgoCD
  displayName: Install Argo CD into AKS
  jobs:
  - job: Install_ArgoCD
    steps:
    - checkout: none
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e
          az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing
          if kubectl get ns argocd >/dev/null 2>&1; then
            echo "Argo CD already installed."
          else
            kubectl create namespace argocd
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            kubectl wait --for=condition=Ready pods -l app.kubernetes.io/name=argocd-server -n argocd --timeout=300s || true
          fi

- stage: Build_and_Push
  displayName: Build and Push Docker Image
  dependsOn: Setup_ArgoCD
  jobs:
  - job: Build
    steps:
    - checkout: self
      persistCredentials: true
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e
          az acr login --name $(acrName)
          docker build -t $(acrName).azurecr.io/$(imageName):$(imageTag) .
          docker push $(acrName).azurecr.io/$(imageName):$(imageTag)
          echo "##vso[task.setvariable variable=imageFullPath;]$(acrName).azurecr.io/$(imageName):$(imageTag)"

- stage: Update_Git_and_Trigger_Argo
  displayName: Update values.yaml and Trigger ArgoCD
  dependsOn: Build_and_Push
  jobs:
  - job: GitUpdate
    steps:
    - checkout: self
      persistCredentials: true
    - bash: |
        set -e
        sed -i "s|tag:.*|tag: $(imageTag)|" $(helmChartPath)/values.yaml
        git config user.email "buildagent@azuredevops.local"
        git config user.name "Azure DevOps Pipeline"
        git add $(helmChartPath)/values.yaml
        git commit -m "Auto: update image tag to $(imageTag)" || echo "No changes to commit."
        git push origin main

- stage: Flip_Service
  displayName: Switch traffic to new environment
  dependsOn: Update_Git_and_Trigger_Argo
  jobs:
  - job: Flip
    steps:
    - checkout: self
      persistCredentials: true
    - bash: |
        set -e
        CURRENT=$(grep activeVersion: $(helmChartPath)/values.yaml | awk '{print $2}')
        if [ "$CURRENT" = "blue" ]; then NEXT="green"; else NEXT="blue"; fi
        sed -i "s|activeVersion:.*|activeVersion: $NEXT|" $(helmChartPath)/values.yaml
        git config user.email "buildagent@azuredevops.local"
        git config user.name "Azure DevOps Pipeline"
        git add $(helmChartPath)/values.yaml
        git commit -m "Switch traffic to $NEXT after successful deployment" || echo "No changes to commit."
        git push origin main
